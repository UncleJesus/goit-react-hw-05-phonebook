{"version":3,"sources":["components/Notification/Notification.module.css","components/Filter/Filter.module.css","App.module.css","components/ContactList/ContactList.module.css","components/utils.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/Notification/Notification.jsx","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","utils","uuidv4","ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","addContact","this","onSubmit","className","styles","inputTitle","onChange","input","type","disabled","length","btn","Component","ContactListItem","contact","handleDelete","wrapper","contactListItem","onClick","btnDelete","ContactList","visibleContacts","TransitionGroup","component","contactList","map","CSSTransition","timeout","classNames","id","Filter","filter","Notification","message","notification","defaultProps","App","contacts","isExists","handleFilter","toLowerCase","includes","item","find","setTimeout","prevState","savedContacts","JSON","parse","localStorage","getItem","prevProps","setItem","stringify","in","appear","unmountOnExit","notificationStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,MAAQ,4BAA4B,YAAc,kCAAkC,KAAO,2BAA2B,WAAa,mC,mBCAvMD,EAAOC,QAAU,CAAC,WAAa,2BAA2B,MAAQ,wB,mBCAlED,EAAOC,QAAU,CAAC,OAAS,oBAAoB,aAAe,4B,kBCA9DD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,YAAc,iCAAiC,gBAAkB,qCAAqC,UAAY,+BAA+B,MAAQ,2BAA2B,YAAc,iCAAiC,KAAO,0BAA0B,WAAa,kC,gJCC3T,SAASC,IACtB,OAAOC,c,qCCqDMC,E,4MApDbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRH,EAAgBG,EAAhBH,KAAMI,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBACF,EAAKC,MAAMC,WAAW,EAAKX,MAAMC,KAAM,EAAKD,MAAME,QAClD,EAAKI,SAAS,CAAEL,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBU,KAAKZ,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,mCACE,uBAAMW,SAAUD,KAAKL,aAArB,UACE,kCACE,sBAAMO,UAAWC,IAAOC,WAAxB,kBACA,uBACEf,KAAK,OACLI,MAAOJ,EACPgB,SAAUL,KAAKT,aACfW,UAAWC,IAAOG,WAGtB,kCACE,sBAAMJ,UAAWC,IAAOC,WAAxB,oBACA,uBACEf,KAAK,SACLI,MAAOH,EACPe,SAAUL,KAAKT,aACfW,UAAWC,IAAOG,WAGtB,wBACEC,KAAK,SACLC,UAAWnB,EAAKoB,SAAWnB,EAAOmB,OAClCP,UAAWC,IAAOO,IAHpB,kC,GAxCgBC,a,wBCmBXC,EAlBS,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,aAClC,OACE,sBAAKZ,UAAWC,IAAOY,QAAvB,UACE,qBAAIb,UAAWC,IAAOa,gBAAtB,UACGH,EAAQxB,KADX,KACmBwB,EAAQvB,UAE3B,wBAAQiB,KAAK,SAASU,QAASH,EAAcZ,UAAWC,IAAOe,UAA/D,wBCuBSC,EA3BK,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,gBAAiBN,EAAmB,EAAnBA,aACtC,OACE,cAACO,EAAA,EAAD,CAAiBC,UAAU,KAAKpB,UAAWC,IAAOoB,YAAlD,SACGH,EAAgBI,KAAI,SAAAX,GACnB,OACE,cAACY,EAAA,EAAD,CAAgCC,QAAS,IAAKC,WAAYxB,IAA1D,SACE,cAAC,EAAD,CACEU,QAASA,EACTC,aAAc,kBAAMA,EAAaD,EAAQe,QAHzBf,EAAQe,U,iBCavBC,EApBA,SAAC,GAA8B,IAA5BtC,EAA2B,EAA3BA,aAAcuC,EAAa,EAAbA,OAC9B,OACE,kCACE,sBAAM5B,UAAWC,IAAOC,WAAxB,mCACA,uBACEG,KAAK,OACLlB,KAAK,SACLI,MAAOqC,EACPzB,SAAUd,EACVW,UAAWC,IAAOG,Y,iBCTpByB,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,mBAAG9B,UAAWC,IAAO8B,aAArB,SAAoCD,KAO7CD,EAAaG,aAAe,CAC1BF,QAAS,yCAGID,QCNTI,E,4MAIJ/C,MAAQ,CACNgD,SAAU,GACVN,OAAQ,GACRO,UAAU,G,EAmBZC,aAAe,SAACF,EAAUN,GACxB,OAAKA,EAGEM,EAASN,QAAO,SAACjB,GACtB,OAAOA,EAAQxB,KAAKkD,cAAcC,SAASV,EAAOS,kBAH3CH,G,EAOX7C,aAAe,YAAiB,IAAdC,EAAa,EAAbA,OACRH,EAAgBG,EAAhBH,KAAMI,EAAUD,EAAVC,MACd,EAAKC,SAAL,eAAiBL,EAAOI,K,EAG1BqB,aAAe,SAACc,GACd,EAAKlC,UAAS,SAACN,GAEb,MAAO,CACLgD,SAFehD,EAAMgD,SAASN,QAAO,SAACW,GAAD,OAAUA,EAAKb,KAAOA,U,EAOjE7B,WAAa,SAACV,EAAMC,GAClB,GAAI,EAAKF,MAAMgD,SAASM,MAAK,SAAC7B,GAAD,OAAaA,EAAQxB,OAASA,KACzD,EAAKK,SAAS,CAAE2C,UAAU,IAC1BM,YAAW,WACT,EAAKjD,SAAS,CAAE2C,UAAU,MACzB,SACE,CACL,IAAMxB,EAAU,CACde,GAAI3C,IACJI,KAAMA,EACNC,OAAQA,GAEV,EAAKI,UAAS,SAACkD,GACb,MAAO,CACLR,SAAS,GAAD,mBAAMQ,EAAUR,UAAhB,CAA0BvB,U,kEApDxC,IAAMgC,EAAgBC,KAAKC,MAAMC,aAAaC,QAAQ,cAAgB,GAElEJ,GACF7C,KAAKN,SAAS,CACZ0C,SAAUS,M,yCAKGK,EAAWN,GACxBA,EAAUR,WAAapC,KAAKZ,MAAMgD,UACpCY,aAAaG,QAAQ,WAAYL,KAAKM,UAAUpD,KAAKZ,MAAMgD,a,+BA+CrD,IAAD,EACgCpC,KAAKZ,MAApCgD,EADD,EACCA,SAAUN,EADX,EACWA,OAAQO,EADnB,EACmBA,SACpBjB,EAAkBpB,KAAKsC,aAAaF,EAAUN,GACpD,OACE,mCACE,gCACE,cAACL,EAAA,EAAD,CACE4B,IAAI,EACJC,QAAQ,EACR3B,WAAYxB,IACZuB,QAAS,IACT6B,eAAa,EALf,SAOE,6CAEF,cAAC,EAAD,CAAaxD,WAAYC,KAAKD,aAC9B,0CACCqC,EAAS3B,OAAS,GACjB,cAAC,EAAD,CAAQlB,aAAcS,KAAKT,aAAcuC,OAAQA,IAGnD,cAAC,EAAD,CACEV,gBAAiBA,EACjBN,aAAcd,KAAKc,eAGrB,cAACW,EAAA,EAAD,CACE4B,GAAIhB,EACJX,QAAS,IACTC,WAAY6B,IACZD,eAAa,EAJf,SAME,cAAC,EAAD,CAAcvB,QAAQ,qD,GArGhBrB,aAAZwB,EACGD,aAAe,GA4GTC,QCnHfsB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1B9E,EAAOC,QAAU,CAAC,WAAa,gCAAgC,MAAQ,2BAA2B,IAAM,4B","file":"static/js/main.9da30bd8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__1nHgE\",\"enter\":\"Notification_enter__2UTtf\",\"enterActive\":\"Notification_enterActive__1WtZL\",\"exit\":\"Notification_exit__uMaBN\",\"exitActive\":\"Notification_exitActive__3ZWoN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"Filter_inputTitle__OIf93\",\"input\":\"Filter_input__1yhc3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"App_appear__3bQv1\",\"appearActive\":\"App_appearActive__D95lA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactList_wrapper__3kjz_\",\"contactList\":\"ContactList_contactList__3NSIl\",\"contactListItem\":\"ContactList_contactListItem__1tIem\",\"btnDelete\":\"ContactList_btnDelete__PkrjC\",\"enter\":\"ContactList_enter__1GXlZ\",\"enterActive\":\"ContactList_enterActive__2jdXC\",\"exit\":\"ContactList_exit__1mcb6\",\"exitActive\":\"ContactList_exitActive__1FRTm\"};","import { v4 as uuidv4 } from 'uuid';\n\nexport default function utils() {\n  return uuidv4();\n}\n","import React, { Component } from \"react\";\nimport styles from \"../ContactForm/ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.addContact(this.state.name, this.state.number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <span className={styles.inputTitle}>Name</span>\n            <input\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <label>\n            <span className={styles.inputTitle}>Number</span>\n            <input\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <button\n            type=\"submit\"\n            disabled={!name.length || !number.length}\n            className={styles.btn}\n          >\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../ContactList/ContactList.module.css';\n\nconst ContactListItem = ({ contact, handleDelete }) => {\n  return (\n    <div className={styles.wrapper}>\n      <li className={styles.contactListItem}>\n        {contact.name}: {contact.number}\n      </li>\n      <button type=\"button\" onClick={handleDelete} className={styles.btnDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.object.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport ContactListItem from './ContactListItem.jsx';\nimport styles from '../ContactList/ContactList.module.css';\n\nconst ContactList = ({ visibleContacts, handleDelete }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={styles.contactList}>\n      {visibleContacts.map(contact => {\n        return (\n          <CSSTransition key={contact.id} timeout={250} classNames={styles}>\n            <ContactListItem\n              contact={contact}\n              handleDelete={() => handleDelete(contact.id)}\n            />\n          </CSSTransition>\n        );\n      })}\n    </TransitionGroup>\n  );\n};\nContactList.propTypes = {\n  visibleContacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  handleDelete: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from '../Filter/Filter.module.css';\n\nconst Filter = ({ handleChange, filter }) => {\n  return (\n    <label>\n      <span className={styles.inputTitle}>Find contacts by name</span>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={filter}\n        onChange={handleChange}\n        className={styles.input}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import React from \"react\";\nimport styles from \"./Notification.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst Notification = ({ message }) => {\n  return <p className={styles.notification}>{message}</p>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nNotification.defaultProps = {\n  message: \"This name is already in your contacts\",\n};\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\nimport utils from \"./components/utils\";\nimport styles from \"./App.module.css\";\nimport ContactForm from \"./components/ContactForm/ContactForm.jsx\";\nimport ContactList from \"./components/ContactList/ContactList.jsx\";\nimport Filter from \"./components/Filter/Filter.jsx\";\nimport Notification from \"./components/Notification/Notification\";\nimport notificationStyles from \"./components/Notification/Notification.module.css\";\n\nclass App extends Component {\n  static defaultProps = {};\n  static propTypes = {};\n\n  state = {\n    contacts: [],\n    filter: \"\",\n    isExists: false,\n  };\n\n  componentDidMount() {\n    const savedContacts = JSON.parse(localStorage.getItem(\"contacts\")) || [];\n\n    if (savedContacts) {\n      this.setState({\n        contacts: savedContacts,\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleFilter = (contacts, filter) => {\n    if (!filter) {\n      return contacts;\n    }\n    return contacts.filter((contact) => {\n      return contact.name.toLowerCase().includes(filter.toLowerCase());\n    });\n  };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  handleDelete = (id) => {\n    this.setState((state) => {\n      const contacts = state.contacts.filter((item) => item.id !== id);\n      return {\n        contacts,\n      };\n    });\n  };\n\n  addContact = (name, number) => {\n    if (this.state.contacts.find((contact) => contact.name === name)) {\n      this.setState({ isExists: true });\n      setTimeout(() => {\n        this.setState({ isExists: false });\n      }, 2000);\n    } else {\n      const contact = {\n        id: utils(),\n        name: name,\n        number: number,\n      };\n      this.setState((prevState) => {\n        return {\n          contacts: [...prevState.contacts, contact],\n        };\n      });\n    }\n  };\n\n  render() {\n    const { contacts, filter, isExists } = this.state;\n    const visibleContacts = this.handleFilter(contacts, filter);\n    return (\n      <>\n        <div>\n          <CSSTransition\n            in={true}\n            appear={true}\n            classNames={styles}\n            timeout={500}\n            unmountOnExit\n          >\n            <h1>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm addContact={this.addContact} />\n          <h2>Contacts</h2>\n          {contacts.length > 1 && (\n            <Filter handleChange={this.handleChange} filter={filter} />\n          )}\n\n          <ContactList\n            visibleContacts={visibleContacts}\n            handleDelete={this.handleDelete}\n          />\n\n          <CSSTransition\n            in={isExists}\n            timeout={250}\n            classNames={notificationStyles}\n            unmountOnExit\n          >\n            <Notification message=\"This name is already in your contacts\" />\n          </CSSTransition>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputTitle\":\"ContactForm_inputTitle__iGvZc\",\"input\":\"ContactForm_input__K7fEP\",\"btn\":\"ContactForm_btn__BNB4S\"};"],"sourceRoot":""}